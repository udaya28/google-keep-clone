{"version":3,"sources":["firebase.js","components/LoginPage/loginPage.jsx","components/LandingPage/landingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["App","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","setCustomParameters","prompt","firestore","LoginPage","useEffect","Container","maxWidth","className","Button","variant","color","onClick","signInWithPopup","LandingPage","useState","isLoggedIn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAcMA,G,YAAMC,IAASC,cAXE,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAIXC,EAAW,IAAIV,IAASW,KAAKC,mBACnCF,EAASG,oBAAoB,CAACC,OAAO,mBAInBf,EAAIgB,YAHf,IAIMJ,EAAOX,IAASW,OCfhBK,GDgBEhB,EAAf,EChByB,WAWvB,OANEiB,qBAAU,WAEN,OAAO,eAGR,IAEH,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,qBAAKC,UAAU,QAAf,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAZ3B,WDSab,EAAKc,gBAAgBf,ICGnD,0BClBKgB,G,MAAc,WACvB,OACI,8BACI,iDCcG3B,MAbf,WAAgB,IAAD,EACqB4B,oBAAS,GAD9B,mBACNC,EADM,KAQb,OARa,KAEbX,qBAAU,WAER,OAAO,eAGN,IAED,qBAAKG,UAAU,MAAf,SAAsBQ,EAAa,cAAC,EAAD,IAAkB,cAAC,EAAD,OCH1CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af44e5dc.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCMNsOfzm04c2evU5C2BaUHpecMNZ2z7SU',\n  authDomain: 'keep-clone-udaya.firebaseapp.com',\n  databaseURL: 'https://keep-clone-udaya.firebaseio.com',\n  projectId: 'keep-clone-udaya',\n  storageBucket: 'keep-clone-udaya.appspot.com',\n  messagingSenderId: '134603175107',\n  appId: '1:134603175107:web:2a74da86da09ba7ab1de76',\n  measurementId: 'G-BT6KV4XHBC',\n};\n\nconst App = firebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\nexport const DB = App.firestore();\nexport const auth = firebase.auth();\nexport default firebase;","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport './loginPage.scss';\nimport { Box, Container } from '@material-ui/core';\nimport firebase,{auth ,signInWithGoogle} from '../../firebase';\n\nexport const LoginPage = () => {\n\n    const handleSignUp = () =>{\n        signInWithGoogle();\n    }\n    useEffect(() => {\n        \n        return () => {\n            \n        }\n    }, [])\n  return (\n    <Container maxWidth=\"sm\" >\n      <div className=\"login\"  >\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSignUp}>\n          SignUp\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import React from 'react'\nimport './landingPage.scss'\nexport const LandingPage = () => {\n    return (\n        <div>\n            <h1>landingPage</h1>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { LoginPage } from './components/LoginPage/loginPage';\nimport { LandingPage } from './components/LandingPage/landingPage';\n// import firebase,{DB,auth ,signInWithGoogle} from './firebase';\n\nfunction App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    // setInterval(()=>setLoggedIn(true),5000)\n    return () => {\n     \n    }\n  }, [])\n  return (\n    <div className=\"App\">{isLoggedIn ? <LandingPage /> : <LoginPage />}</div>\n  );\n}\n\nexport default App;\n\n// useEffect(() => {\n//   DB.collection('test')\n//     .onSnapshot((snapshot) => {\n//       console.log(snapshot.docs.map((doc) => doc.data().greet));\n\n//     });\n\n// }, []);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}