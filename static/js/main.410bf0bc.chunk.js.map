{"version":3,"sources":["firebase.js","svg/todo.svg","svg/notes.svg","svg/sync.svg","svg/google-icon.svg","components/LoginPage/loginPage.jsx","components/LandingPage/landingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["App","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","setCustomParameters","prompt","firestore","useStyles","makeStyles","root","color","background","fontWeight","textTransform","borderRadius","width","marginTop","backgroundColor","LoginPage","Slide","props","src","img","alt","className","head","content","classes","Container","maxWidth","showArrows","showStatus","showThumbs","infiniteLoop","interval","stopOnHover","swipeable","autoPlay","todo","notes","sync","Button","variant","onClick","signInWithPopup","error","console","log","message","startIcon","googleIcon","srcSet","LandingPage","userData","displayName","photoURL","signOut","useState","isLoggedIn","setLoggedIn","setUserData","useEffect","onAuthStateChanged","data","uid","email","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.410bf0bc.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCMNsOfzm04c2evU5C2BaUHpecMNZ2z7SU',\n  authDomain: 'keep-clone-udaya.firebaseapp.com',\n  databaseURL: 'https://keep-clone-udaya.firebaseio.com',\n  projectId: 'keep-clone-udaya',\n  storageBucket: 'keep-clone-udaya.appspot.com',\n  messagingSenderId: '134603175107',\n  appId: '1:134603175107:web:2a74da86da09ba7ab1de76',\n  measurementId: 'G-BT6KV4XHBC',\n};\n\nconst App = firebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\nexport const DB = App.firestore();\nexport const auth = firebase.auth();\nexport default firebase;","export default __webpack_public_path__ + \"static/media/todo.7573c54b.svg\";","export default __webpack_public_path__ + \"static/media/notes.84ceea96.svg\";","export default __webpack_public_path__ + \"static/media/sync.350ed259.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.9a7800d0.svg\";","import './loginPage.scss';\nimport Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { signInWithGoogle } from '../../firebase';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport todo from '../../svg/todo.svg';\nimport notes from '../../svg/notes.svg';\nimport sync from '../../svg/sync.svg';\nimport googleIcon from '../../svg/google-icon.svg';\n\nconst useStyles = makeStyles({\n  root: {\n    color: '#525252',\n    background: '#ffffff',\n    fontWeight: '700',\n    textTransform: 'none',\n    borderRadius: '20px',\n    width: '80%',\n    marginTop: '15px',\n    '&:hover': {\n      backgroundColor: 'white',\n    },\n  },\n});\nexport const LoginPage = () => {\n  const handleSignUp = () => {\n    try {\n      signInWithGoogle();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const Slide = (props) => {\n    return (\n      <div>\n        <img src={props.img} alt=\"\" className={props.className} />\n        <div className=\"content\">\n          <p className=\"heading\">{props.head}</p>\n          <p className=\"caption\">{props.content}</p>\n        </div>\n      </div>\n    );\n  };\n\n  const classes = useStyles();\n  return (\n    <div className=\"full\">\n      <Container maxWidth=\"sm\" className=\"login-main\">\n        <div className=\"login\">\n          <h1 className=\"head\">JARVISü§ç</h1>\n          <div className=\"slide-1\">\n            <Carousel\n              showArrows={false}\n              showStatus={false}\n              showThumbs={false}\n              infiniteLoop={true}\n              interval={4000}\n              stopOnHover={false}\n              swipeable={true}\n              autoPlay\n            >\n              <Slide\n                img={todo}\n                className=\"img img-first\"\n                head=\"Plan your day\"\n                content=\"Stay on track and get things done by making Todo\"\n              />\n              <Slide\n                img={notes}\n                className=\"img\"\n                head=\"Stay on track\"\n                content=\"Quickly capture your thoughts anywhere by making Notes\"\n              />\n              <Slide\n                img={sync}\n                className=\"img img-third\"\n                head=\"Synchronization in milliseconds\"\n                content=\"Synchronization among sign in devices without reloading\"\n              />\n            </Carousel>\n          </div>\n          <Button\n            variant=\"contained\"\n            onClick={handleSignUp}\n            startIcon={\n              <img src={googleIcon} alt=\"\" srcSet=\"\" className=\"logo-g\" />\n            }\n            className={`${classes.root} sign-in-button`}\n          >\n            Sign in with Google\n          </Button>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import React from 'react';\nimport firebase from '../../firebase';\nimport './landingPage.scss';\nimport { Button, Container } from '@material-ui/core';\nexport const LandingPage = ({ userData }) => {\n  return (\n    <Container >\n      <div className=\"header\">\n      <h1>Hello {userData.displayName}</h1>\n\n      <img src={userData.photoURL} alt={userData.displayName} /> <br />\n      </div>\n      {/* <h2>{userData.email}</h2>\n      <h3>{userData.uid}</h3> */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => firebase.auth().signOut()}\n      >\n        Sign Out\n      </Button>\n    </Container>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { LoginPage } from './components/LoginPage/loginPage';\nimport { LandingPage } from './components/LandingPage/landingPage';\nimport firebase from './firebase';\n// import firebase,{DB,auth ,signInWithGoogle} from './firebase';\n\nfunction App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (data) {\n      if (data) {\n        const { photoURL, uid, email, displayName } = data;\n        setUserData({ photoURL, uid, email, displayName });\n        setLoggedIn(true);\n        console.log('log in');\n      } else {\n        setUserData({});\n        setLoggedIn(false);\n        console.log('log out');\n      }\n    });\n  }, []);\n useEffect(() => {\n   console.log(isLoggedIn,userData)\n }, [isLoggedIn,userData])\n\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? <LandingPage userData={userData} /> : <LoginPage />}\n    </div>\n  );\n}\n\nexport default App;\n\n// useEffect(() => {\n//   DB.collection('test')\n//     .onSnapshot((snapshot) => {\n//       console.log(snapshot.docs.map((doc) => doc.data().greet));\n\n//     });\n\n// }, []);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}