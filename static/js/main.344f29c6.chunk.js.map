{"version":3,"sources":["firebase.js","components/LoginPage/loginPage.jsx","components/LandingPage/landingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["App","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","setCustomParameters","prompt","firestore","LoginPage","userData","setUserData","setLoggedIn","handleSignUp","a","emailVerified","errorMessage","signInWithPopup","loginData","console","log","user","message","photoURL","uid","email","displayName","Container","maxWidth","className","Button","variant","color","onClick","LandingPage","src","alt","useState","isLoggedIn","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAcMA,G,YAAMC,IAASC,cAXE,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAIXC,EAAW,IAAIV,IAASW,KAAKC,mBACnCF,EAASG,oBAAoB,CAACC,OAAO,mBAInBf,EAAIgB,YAHf,IAIMJ,EAAOX,IAASW,OChBhBK,GDiBEhB,EAAf,ECjByB,SAAC,GAA2C,EAAzCiB,SAA0C,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC3CC,EAAY,uCAAG,0CAAAC,EAAA,6DAEjBC,GAAgB,EAChBC,EAAe,GAHE,kBDWeZ,EAAKa,gBAAgBd,GCXpC,OAKjBe,EALiB,OAMjBC,QAAQC,IAAIF,EAAUG,MACtBN,EAAgBG,EAAUG,KAAKN,cAPd,gDASjBC,EAAe,KAAMM,QATJ,sBAWbP,EAXa,0BAY+BG,EAAUG,KAAhDE,EAZO,EAYPA,SAAUC,EAZH,EAYGA,IAAKC,EAZR,EAYQA,MAAOC,EAZf,EAYeA,YAZf,UAaTf,EAAY,CAAEY,WAAUC,MAAKC,QAAOC,gBAb3B,QAcfd,GAAY,GAdG,wBAgBfO,QAAQC,IAAIJ,GAhBG,2FAAH,qDAqBlB,OACE,cAACW,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,qBAAKC,UAAU,QAAf,SACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASpB,EAArD,0BC3BKqB,G,MAAc,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAC5B,OACE,eAACiB,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,6BAAKlB,EAASgB,cACd,6BAAKhB,EAASe,QAClB,6BAAKf,EAASc,MACd,qBAAKW,IAAKzB,EAASa,SAAUa,IAAK1B,EAASgB,mBCmB9BlC,MAtBf,WAAgB,IAAD,EACqB6C,oBAAS,GAD9B,mBACNC,EADM,KACM1B,EADN,OAEmByB,mBAAS,IAF5B,mBAEN3B,EAFM,KAEIC,EAFJ,KAOb,OAJA4B,qBAAU,WAER,OADApB,QAAQC,IAAIkB,EAAY5B,GACjB,eACN,CAAC4B,EAAY5B,IAEd,qBAAKmB,UAAU,MAAf,SACGS,EACC,cAAC,EAAD,CAAa5B,SAAUA,IAEvB,cAAC,EAAD,CACEA,SAAUA,EACVC,YAAaA,EACbC,YAAaA,OCTR4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.344f29c6.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCMNsOfzm04c2evU5C2BaUHpecMNZ2z7SU',\n  authDomain: 'keep-clone-udaya.firebaseapp.com',\n  databaseURL: 'https://keep-clone-udaya.firebaseio.com',\n  projectId: 'keep-clone-udaya',\n  storageBucket: 'keep-clone-udaya.appspot.com',\n  messagingSenderId: '134603175107',\n  appId: '1:134603175107:web:2a74da86da09ba7ab1de76',\n  measurementId: 'G-BT6KV4XHBC',\n};\n\nconst App = firebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\nexport const DB = App.firestore();\nexport const auth = firebase.auth();\nexport default firebase;","import Button from '@material-ui/core/Button';\nimport './loginPage.scss';\nimport {  Container } from '@material-ui/core';\nimport firebase, { auth, signInWithGoogle } from '../../firebase';\n\nexport const LoginPage = ({ userData, setUserData, setLoggedIn }) => {\n  const handleSignUp = async () => {\n    let loginData,\n      emailVerified = false,\n      errorMessage = '';\n    try {\n      loginData = await signInWithGoogle();\n      console.log(loginData.user);\n      emailVerified = loginData.user.emailVerified;\n    } catch (error) {\n      errorMessage = error.message;\n    } finally {\n      if (emailVerified) {\n        const { photoURL, uid, email, displayName } = loginData.user;\n        await setUserData({ photoURL, uid, email, displayName });\n        setLoggedIn(true);\n      } else {\n        console.log(errorMessage);\n      }\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <div className=\"login\">\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSignUp}>\n          SignUp\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import React from 'react';\nimport './landingPage.scss';\nimport { Container } from '@material-ui/core';\nexport const LandingPage = ({ userData }) => {\n  return (\n    <Container maxWidth=\"sm\" >\n      <h1>{userData.displayName }</h1>\n      <h2>{userData.email}</h2>\n  <h3>{userData.uid}</h3>\n  <img src={userData.photoURL} alt={userData.displayName}/>\n    </Container>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { LoginPage } from './components/LoginPage/loginPage';\nimport { LandingPage } from './components/LandingPage/landingPage';\n// import firebase,{DB,auth ,signInWithGoogle} from './firebase';\n\nfunction App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    console.log(isLoggedIn, userData);\n    return () => {};\n  }, [isLoggedIn, userData]);\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? (\n        <LandingPage userData={userData} />\n      ) : (\n        <LoginPage\n          userData={userData}\n          setUserData={setUserData}\n          setLoggedIn={setLoggedIn}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// useEffect(() => {\n//   DB.collection('test')\n//     .onSnapshot((snapshot) => {\n//       console.log(snapshot.docs.map((doc) => doc.data().greet));\n\n//     });\n\n// }, []);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}